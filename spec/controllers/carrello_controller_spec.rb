require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe CarrelloController, type: :controller do
  before :each do
    @citta= Citta.create(nome: "Roma", provincia: "Rm", regione: "Lazio",polo_id: 1)
    @cliente = createCliente("Mario","Rossi",@citta)
    @carrello = Carrello.create(cliente_id: @cliente.id)
  end
  it "should not get carrello" do
    get :show, id: @cliente.carrello
    expect(response).to_not render_template :show
   end

  it "should get carrello" do
    sign_in @cliente
    get :show,  id: @cliente.carrello
    expect(response).to render_template :show
  end

  it "should not get other cliente carrello" do
    cliente2= createCliente("mario","bianchi",@citta)
    carrello2 = Carrello.create(cliente_id: cliente2.id)
    sign_in @cliente
    get :show, id: cliente2.carrello
    expect(response).to_not render_template :show
   end

end
